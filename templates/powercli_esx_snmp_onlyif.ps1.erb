# Note that this connect is going to the hosts, not vcenter. This is required for Set-vmhostsnmp
Connect-VIServer '<%= @name %>' -User '<%= @username %>' -Password '<%= @password %>'

$SNMPCheck = Get-VMHostSNMP

if(($SNMPCheck.Enabled) -ne 'True'){
     exit 0
}

# Hashtable of all trap targets on the host currently
$TargetsHashtable = @{}

# Building a hashtable of current trap targets on the host
foreach($t in ($SNMPCheck.TrapTargets)){
     $TargetObject = new-object PSCustomObject
     $TargetObject | add-member -membertype noteproperty -name Community -value $t.Community
     $TargetObject | add-member -membertype noteproperty -name Port -value $t.Port

     # Add this object to the tracking hashtable
     $TargetsHashtable.Add($t.HostName, $TargetObject)
}

# Hashtable of all trap targets we WANT on the host
$RequestedTargetsHashtable = @{}



# Create a comma seperated string that contains all SNMP targets defined in hiera
$RequestedTargetsCsvString = '<%= @targets.join(",") %>'

# Split the STRING on "," to turn it into a powershell array
$RequestedTargetsArray = $$targets_csv_string.Split(",")





# Building the hashtable of the trap targets we WANT on the host
foreach($t in $RequestedTargetsArray){
     $TargetObject = new-object PSCustomObject
     $TargetObject | add-member -membertype noteproperty -name Community -value '<%= @community %>'
     $TargetObject | add-member -membertype noteproperty -name Port -value '<%= @port %>'

     # Add the TargetObject to the tracking hashtable
     $RequestedTargetsHashtable.Add($t, $TargetObject)
}

if($RequestedTargetsHashtable -eq $TargetsHashtable){
    exit 1
}

exit 0



# # If the target we want on the host IS already there...
# if(($SNMPCheck.TrapTargets.HostName) -contains '<%= @target %>'){

#      # Select that target specifically from the hashtable
#      $TargetCheck = $TargetsHashtable['<%= @target %>']

#      # If the target on the host has a DIFFERENT port than what we want...
#      if(($TargetCheck.Port) -ne '<%= @port %>'){
#          exit 0
#      }

#      # If the target on the host has a DIFFERENT community than we want...
#      if(($TargetCheck.Community) -ne '<%= @community %>'){
#          exit 0
#      }
# }
# # If the target we want on the host is NOT there...
# else{
#     exit 0
# }

# If we found no problems with SNMP targets
# exit 1
