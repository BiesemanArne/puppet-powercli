# Note that this connect is going to the hosts, not vcenter. This is required for Set-vmhostsnmp
Connect-VIServer '<%= @name %>' -User '<%= @username %>' -Password '<%= @password %>'

$SNMPCheck = Get-VMHostSNMP

if(($SNMPCheck.Enabled) -ne 'True'){
     exit 0
}

# Hashtable of all trap targets on the host currently
$TargetsHashtable = @{}

# Building a hashtable of current trap targets on the host
foreach($t in ($SNMPCheck.TrapTargets)){
     $TargetObject = new-object PSCustomObject
     $TargetObject | add-member -membertype noteproperty -name Community -value $t.Community
     $TargetObject | add-member -membertype noteproperty -name Port -value $t.Port

     # Add this object to the tracking hashtable
     $TargetsHashtable.Add($t.HostName, $TargetObject)
}

# Create a comma seperated string that contains all SNMP targets defined in hiera
# This is required because arrays in Puppet look liked ['1.1.1.1', '2.2.2.2'] and you
# cannot set this to a POSH variable. If you enclose this in quotes you CAN but it makes
# creating the POSH array even more of a pain.
$RequestedTargetsCsvString = '<%= @targets.join(",") %>'

# Split the STRING on "," to turn it into a powershell array
$RequestedTargetsArray = $RequestedTargetsCsvString.Split(",")

# Hashtable of all trap targets we WANT on the host
$RequestedTargetsHashtable = @{}

# Building the hashtable of the trap targets we WANT on the host
foreach($t in $RequestedTargetsArray){
     $TargetObject = new-object PSCustomObject
     $TargetObject | add-member -membertype noteproperty -name Community -value '<%= @community %>'
     $TargetObject | add-member -membertype noteproperty -name Port -value '<%= @port %>'

     # Add the TargetObject to the tracking hashtable
     $RequestedTargetsHashtable.Add($t, $TargetObject)
}

if($RequestedTargetsHashtable -eq $TargetsHashtable){
    exit 1
}

exit 0

